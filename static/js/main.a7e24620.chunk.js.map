{"version":3,"sources":["components/Header.jsx","styled/styled.jsx","hooks/useInput.jsx","components/Alert.jsx","components/Encrypt.jsx","components/Decrypt.jsx","components/Main.jsx","App.jsx","index.jsx"],"names":["Container","styled","h2","Header","TextBigCenter","h1","div","TextCenter","Button","button","useInput","placeholder","propVal","useState","value","setValue","className","style","marginBottom","width","onChange","e","target","Alert","content","result","role","wordWrap","bcryptjs","require","Salt","SaltRounds","Encrypt","str","strInput","salt","setSalt","doing","setDoing","hash","setHash","onClick","saltRounds","then","err","newHash","eventEncrypt","Decrypt","hashInput","setResult","compare","newResult","eventDecrypt","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a7e24620.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => (\n  <Container>Encrypt and Decrypt with library bcryptjs</Container>\n);\n\nconst Container = styled.h2`\n  text-align: center;\n`;\n\nexport default Header;\n","import styled from \"styled-components\";\r\n\r\nexport const TextBigCenter = styled.h1`\r\n  color: black;\r\n  text-align: center;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport const TextCenter = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  cursor: pointer;\r\n  text-align: center;\r\n  border: none;\r\n  border-radius: 5px;\r\n`;\r\n","import { useState } from \"react\";\r\n\r\nexport function useInput({ placeholder, propVal }) {\r\n  const [value, setValue] = useState(propVal);\r\n  const input = (\r\n    <textarea\r\n      className=\"text-center\"\r\n      placeholder={placeholder}\r\n      style={{ marginBottom: \"10px\", width: \"100%\" }}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      value={value}\r\n    />\r\n  );\r\n  return [value, input];\r\n}\r\n","export default function Alert({ content, result = true }) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"mt-2 alert  alert-\" + (result ? \"success\" : \"danger\") + \" text-center\"\r\n      }\r\n      role=\"alert\"\r\n      style={{ wordWrap: \"break-word\" }}\r\n    >\r\n      {content + \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TextBigCenter, TextCenter, Button } from \"../styled/styled\";\nimport { useInput } from \"../hooks/useInput\";\nimport { Container } from \"../styled/styled\";\nimport Alert from \"./Alert\";\nconst bcryptjs = require(\"bcryptjs\");\n\nconst Encrypt = () => {\n  const [str, strInput] = useInput({\n    placeholder: \"String\",\n    propVal: \"hello world\",\n  });\n  const [salt, setSalt] = useState(0);\n  const [doing, setDoing] = useState(false);\n  const [hash, setHash] = useState(\n    \"$2a$10$VEfKDTkTlY0/RtmG5nxHT.GjjB4H5.FF5FfivKkGbQIJOMuZrCENi\"\n  );\n\n  function eventEncrypt(str, saltRounds) {\n    setDoing(true);\n    bcryptjs.hash(str, saltRounds).then((err, newHash) => {\n      setDoing(false);\n      setHash(err || newHash);\n    });\n  }\n\n  return (\n    <Container>\n      <TextBigCenter>Encrypt</TextBigCenter>\n      {strInput}\n      <TextCenter>Salt Rounds</TextCenter>\n      <div className=\"d-flex justify-content-center\">\n        <SaltRounds>\n          <Button\n            onClick={() => {\n              if (salt === 0) {\n                setSalt(0);\n              } else {\n                setSalt(salt - 1);\n              }\n            }}\n          >\n            Prev\n          </Button>\n          <Salt>{salt}</Salt>\n          <Button\n            onClick={() => {\n              if (salt === 20) {\n                setSalt(20);\n              } else {\n                setSalt(salt + 1);\n              }\n            }}\n          >\n            Next\n          </Button>\n        </SaltRounds>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Button onClick={() => eventEncrypt(str, salt)}>Click me</Button>\n      </div>\n      {doing && <TextCenter>Encrypting..............</TextCenter>}\n      <Alert content={hash} />\n    </Container>\n  );\n};\n\nconst Salt = styled.div`\n  color: black;\n  margin-inline: 5px;\n`;\n\nconst SaltRounds = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 20px;\n  width: 100px;\n`;\n\nexport default Encrypt;\n","import React, { useState } from \"react\";\nimport { TextBigCenter, TextCenter, Button } from \"../styled/styled\";\nimport { useInput } from \"../hooks/useInput\";\nimport { Container } from \"../styled/styled\";\nimport Alert from \"./Alert\";\nconst bcryptjs = require(\"bcryptjs\");\n\nconst Decrypt = () => {\n  const [hash, hashInput] = useInput({\n    placeholder: \"Hash to check\",\n    propVal: \"$2a$10$VEfKDTkTlY0/RtmG5nxHT.GjjB4H5.FF5FfivKkGbQIJOMuZrCENi\",\n  });\n  const [str, strInput] = useInput({\n    placeholder: \"String to check again\",\n    propVal: \"hello world\",\n  });\n  const [doing, setDoing] = useState(false);\n  const [result, setResult] = useState(true);\n\n  function eventDecrypt(str, hash) {\n    setDoing(true);\n    bcryptjs.compare(str, hash).then((newResult) => {\n      setDoing(false);\n      setResult(newResult);\n    });\n  }\n\n  return (\n    <Container>\n      <TextBigCenter>Decrypt</TextBigCenter>\n      {strInput}\n      <br />\n      {hashInput}\n      <div className=\"d-flex justify-content-center\">\n        <Button onClick={() => eventDecrypt(str, hash)}>Click me</Button>\n      </div>\n      {doing && <TextCenter>Decrypting..............</TextCenter>}\n      <Alert content={result} result={result} />\n    </Container>\n  );\n};\n\nexport default Decrypt;\n","import React from \"react\";\nimport Encrypt from \"./Encrypt.jsx\";\nimport Decrypt from \"./Decrypt.jsx\";\n\nconst Main = () => (\n  <div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <Encrypt />\n      </div>\n      <div className=\"col\">\n        <Decrypt />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Main;\n","import Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}