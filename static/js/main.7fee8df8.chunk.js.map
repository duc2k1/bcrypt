{"version":3,"sources":["components/Header.jsx","styled/styled.jsx","hooks/useInput.jsx","components/Alert.jsx","components/Encrypt.jsx","components/Decrypt.jsx","components/Main.jsx","App.jsx","index.jsx"],"names":["Container","styled","h2","Header","TextBig","h1","div","TextCenter","useInput","type","placeholder","propVal","useState","value","setValue","onChange","e","target","maxLength","style","marginBottom","width","Alert","content","result","className","role","wordWrap","bcryptjs","require","Button","button","Salt","SaltRounds","Encrypt","str","strInput","salt","setSalt","doing","setDoing","hash","setHash","onClick","saltRounds","then","err","newHash","eventEncrypt","Decrypt","hashInput","setResult","compare","newResult","eventDecrypt","Main","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7fee8df8.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Header = () => (\n  <Container>Encrypt and Decrypt with library bcryptjs</Container>\n);\n\nconst Container = styled.h2`\n  text-align: center;\n`;\n\nexport default Header;\n","import styled from \"styled-components\";\r\n\r\nexport const TextBig = styled.h1`\r\n  color: black;\r\n`;\r\n\r\nexport const Container = styled.div`\r\n  padding: 10px;\r\n`;\r\n\r\nexport const TextCenter = styled.div`\r\n  text-align: center;\r\n`;\r\n","import { useState } from \"react\";\r\n\r\nexport function useInput({ type, placeholder, propVal }) {\r\n  const [value, setValue] = useState(propVal);\r\n  const input = (\r\n    <input\r\n      value={value}\r\n      onChange={(e) => setValue(e.target.value)}\r\n      type={type}\r\n      maxLength=\"100\"\r\n      style={{ marginBottom: \"10px\", width: \"100%\" }}\r\n      placeholder={placeholder}\r\n    />\r\n  );\r\n  return [value, input];\r\n}\r\n","export default function Alert({ content, result = true }) {\r\n  return (\r\n    <div\r\n      className={\r\n        \"mt-2 alert  alert-\" +\r\n        (result ? \"success\" : \"danger\") +\r\n        \" alert-dismissible fade show\"\r\n      }\r\n      role=\"alert\"\r\n      style={{ wordWrap: \"break-word\" }}\r\n    >\r\n      {content + \"\"}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TextBig, TextCenter } from \"../styled/styled\";\nimport { useInput } from \"../hooks/useInput\";\nimport { Container } from \"../styled/styled\";\nimport Alert from \"./Alert\";\nconst bcryptjs = require(\"bcryptjs\");\n\nconst Encrypt = () => {\n  const [str, strInput] = useInput({\n    type: \"text\",\n    placeholder: \"String\",\n    propVal: \"hello world\",\n  });\n  const [salt, setSalt] = useState(0);\n  const [doing, setDoing] = useState(false);\n  const [hash, setHash] = useState(\n    \"$2a$10$VEfKDTkTlY0/RtmG5nxHT.GjjB4H5.FF5FfivKkGbQIJOMuZrCENi\"\n  );\n\n  function eventEncrypt(str, saltRounds) {\n    setDoing(true);\n    bcryptjs.hash(str, saltRounds).then((err, newHash) => {\n      setDoing(false);\n      setHash(err || newHash);\n    });\n  }\n\n  return (\n    <Container>\n      <TextBig>Encrypt</TextBig>\n      {strInput}\n      <div className=\"d-flex justify-content-center\">\n        <SaltRounds>\n          <Button\n            onClick={() => {\n              if (salt === 0) {\n                setSalt(0);\n              } else {\n                setSalt(salt - 1);\n              }\n            }}\n          >\n            Prev\n          </Button>\n          <Salt>{salt}</Salt>\n          <Button\n            onClick={() => {\n              if (salt === 20) {\n                setSalt(20);\n              } else {\n                setSalt(salt + 1);\n              }\n            }}\n          >\n            Next\n          </Button>\n        </SaltRounds>\n      </div>\n      <div className=\"d-flex justify-content-center\">\n        <Button onClick={() => eventEncrypt(str, salt)}>Click me</Button>\n      </div>\n      {doing && <TextCenter>Encrypting..............</TextCenter>}\n      <Alert content={hash} />\n    </Container>\n  );\n};\n\nconst Button = styled.button`\n  cursor: pointer;\n  text-align: center;\n  border: none;\n  border-radius: 5px;\n`;\n\nconst Salt = styled.div`\n  color: black;\n  margin: 10px;\n`;\n\nconst SaltRounds = styled.div`\n  display: flex;\n  justify-content: space-around;\n  margin-bottom: 10px;\n  width: 100px;\n`;\n\nexport default Encrypt;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport { TextBig, TextCenter } from \"../styled/styled\";\nimport { useInput } from \"../hooks/useInput\";\nimport { Container } from \"../styled/styled\";\nimport Alert from \"./Alert\";\nconst bcryptjs = require(\"bcryptjs\");\n\nconst Decrypt = () => {\n  const [hash, hashInput] = useInput({\n    type: \"text\",\n    placeholder: \"Hash to check\",\n    propVal: \"$2a$10$VEfKDTkTlY0/RtmG5nxHT.GjjB4H5.FF5FfivKkGbQIJOMuZrCENi\",\n  });\n  const [str, strInput] = useInput({\n    type: \"text\",\n    placeholder: \"String to check again\",\n    propVal: \"hello world\",\n  });\n  const [doing, setDoing] = useState(false);\n  const [result, setResult] = useState(true);\n\n  function eventDecrypt(str, hash) {\n    setDoing(true);\n    bcryptjs.compare(str, hash).then((newResult) => {\n      setDoing(false);\n      setResult(newResult);\n    });\n  }\n\n  return (\n    <Container>\n      <TextBig>Decrypt</TextBig>\n      {strInput}\n      <br />\n      {hashInput}\n      <div className=\"d-flex justify-content-center\">\n        <Button onClick={() => eventDecrypt(str, hash)}>Click me</Button>\n      </div>\n      {doing && <TextCenter>Decrypting..............</TextCenter>}\n      <Alert content={result} result={result} />\n    </Container>\n  );\n};\n\nconst Button = styled.button`\n  cursor: pointer;\n  text-align: center;\n  border: none;\n  border-radius: 5px;\n`;\n\nexport default Decrypt;\n","import React from \"react\";\nimport Encrypt from \"./Encrypt.jsx\";\nimport Decrypt from \"./Decrypt.jsx\";\n\nconst Main = () => (\n  <div>\n    <div className=\"row\">\n      <div className=\"col\">\n        <Encrypt />\n      </div>\n      <div className=\"col\">\n        <Decrypt />\n      </div>\n    </div>\n  </div>\n);\n\nexport default Main;\n","import Header from \"./components/Header\";\nimport Main from \"./components/Main\";\n\nexport default function App() {\n  return (\n    <div className=\"container\">\n      <Header />\n      <Main />\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}